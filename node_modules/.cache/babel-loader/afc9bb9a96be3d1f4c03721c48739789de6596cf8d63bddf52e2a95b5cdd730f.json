{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cars: [{\n    id: 1,\n    type: 'sedan',\n    available: true\n  }, {\n    id: 2,\n    type: 'SUV',\n    available: true\n  }, {\n    id: 3,\n    type: 'van',\n    available: true\n  }],\n  rentals: []\n};\nconst carSlice = createSlice({\n  name: 'cars',\n  initialState,\n  reducers: {\n    reserveCar: (state, action) => {\n      const car = state.cars.find(car => car.id === action.payload.carId);\n      if (car) car.available = false;\n      state.rentals.push(action.payload);\n    },\n    returnCar: (state, action) => {\n      const car = state.cars.find(car => car.id === action.payload);\n      if (car) car.available = true;\n      state.rentals = state.rentals.filter(rental => rental.carId !== action.payload);\n    }\n  }\n});\nexport const {\n  reserveCar,\n  returnCar\n} = carSlice.actions;\nexport default carSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cars","id","type","available","rentals","carSlice","name","reducers","reserveCar","state","action","car","find","payload","carId","push","returnCar","filter","rental","actions","reducer"],"sources":["/Users/patrykliberski/Downloads/Dev/car-rental-system/src/features/cars/carSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Car, Rental } from './CarTypes';\n\ninterface CarState {\n  cars: Car[];\n  rentals: Rental[];\n}\n\nconst initialState: CarState = {\n  cars: [\n    { id: 1, type: 'sedan', available: true },\n    { id: 2, type: 'SUV', available: true },\n    { id: 3, type: 'van', available: true },\n  ],\n  rentals: []\n};\n\nconst carSlice = createSlice({\n  name: 'cars',\n  initialState,\n  reducers: {\n    reserveCar: (state, action: PayloadAction<Rental>) => {\n      const car = state.cars.find(car => car.id === action.payload.carId);\n      if (car) car.available = false;\n      state.rentals.push(action.payload);\n    },\n    returnCar: (state, action: PayloadAction<number>) => {\n      const car = state.cars.find(car => car.id === action.payload);\n      if (car) car.available = true;\n      state.rentals = state.rentals.filter(rental => rental.carId !== action.payload);\n    }\n  }\n});\n\nexport const { reserveCar, returnCar } = carSlice.actions;\nexport default carSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAAsB,GAAG;EAC7BC,IAAI,EAAE,CACJ;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAK,CAAC,CACxC;EACDC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,QAAQ,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACpD,MAAMC,GAAG,GAAGF,KAAK,CAACT,IAAI,CAACY,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAKS,MAAM,CAACG,OAAO,CAACC,KAAK,CAAC;MACnE,IAAIH,GAAG,EAAEA,GAAG,CAACR,SAAS,GAAG,KAAK;MAC9BM,KAAK,CAACL,OAAO,CAACW,IAAI,CAACL,MAAM,CAACG,OAAO,CAAC;IACpC,CAAC;IACDG,SAAS,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACnD,MAAMC,GAAG,GAAGF,KAAK,CAACT,IAAI,CAACY,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACV,EAAE,KAAKS,MAAM,CAACG,OAAO,CAAC;MAC7D,IAAIF,GAAG,EAAEA,GAAG,CAACR,SAAS,GAAG,IAAI;MAC7BM,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,CAACa,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACJ,KAAK,KAAKJ,MAAM,CAACG,OAAO,CAAC;IACjF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,UAAU;EAAEQ;AAAU,CAAC,GAAGX,QAAQ,CAACc,OAAO;AACzD,eAAed,QAAQ,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}