{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Define the structure of a Car object\n// Define the structure of the car state, which includes available cars and rentals\n// Initial state for the cars slice\nconst initialState={availableCars:[{id:1,type:'sedan',available:true},{id:2,type:'sedan',available:true},{id:3,type:'sedan',available:true},{id:4,type:'SUV',available:true},{id:5,type:'SUV',available:true},{id:6,type:'SUV',available:true},{id:7,type:'van',available:true},{id:8,type:'van',available:true},{id:9,type:'van',available:true}],rentals:[]};// Create a slice for the car state, with actions to reserve and return cars\nconst carSlice=createSlice({name:'cars',initialState,reducers:{// Action to reserve a car\nreserveCar:(state,action)=>{// Find the car to be reserved by its ID\nconst car=state.availableCars.find(c=>c.id===action.payload.carId);// Check if the car is available for rent\nif(car&&car.available){// Count how many cars of this type are already rented\nconst rentedCarsOfType=state.rentals.filter(rental=>rental.type===action.payload.type).length;// Allow reservation only if less than 3 cars of the same type are rented\nif(rentedCarsOfType<3){car.available=false;// Mark the car as unavailable\nstate.rentals.push(action.payload);// Add the rental to the rental history\n}else{console.log(`Limit of 3 ${action.payload.type} cars has been reached.`);}}},// Action to return a rented car\nreturnCar:(state,action)=>{// Find the car to be returned by its ID\nconst car=state.availableCars.find(c=>c.id===action.payload);if(car){car.available=true;// Mark the car as available again\n// Remove the rental from the rental history\nstate.rentals=state.rentals.filter(rental=>rental.carId!==action.payload);}}}});// Export the actions generated by createSlice\nexport const{reserveCar,returnCar}=carSlice.actions;// Export the reducer for the cars slice\nexport default carSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","availableCars","id","type","available","rentals","carSlice","name","reducers","reserveCar","state","action","car","find","c","payload","carId","rentedCarsOfType","filter","rental","length","push","console","log","returnCar","actions","reducer"],"sources":["/Users/patrykliberski/Downloads/Car-Rental-System/src/features/cars/carSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Define the structure of a Car object\ninterface Car {\n  id: number;\n  type: 'sedan' | 'SUV' | 'van';\n  available: boolean;\n}\n\n// Define the structure of the car state, which includes available cars and rentals\ninterface CarState {\n  availableCars: Car[];\n  rentals: { carId: number; type: string; startDate: string; days: number }[];\n}\n\n// Initial state for the cars slice\nconst initialState: CarState = {\n  availableCars: [\n    { id: 1, type: 'sedan', available: true },\n    { id: 2, type: 'sedan', available: true },\n    { id: 3, type: 'sedan', available: true },\n    { id: 4, type: 'SUV', available: true },\n    { id: 5, type: 'SUV', available: true },\n    { id: 6, type: 'SUV', available: true },\n    { id: 7, type: 'van', available: true },\n    { id: 8, type: 'van', available: true },\n    { id: 9, type: 'van', available: true },\n  ],\n  rentals: [],\n};\n\n// Create a slice for the car state, with actions to reserve and return cars\nconst carSlice = createSlice({\n  name: 'cars',\n  initialState,\n  reducers: {\n    // Action to reserve a car\n    reserveCar: (state, action: PayloadAction<{ carId: number; type: string; startDate: string; days: number }>) => {\n      // Find the car to be reserved by its ID\n      const car = state.availableCars.find(c => c.id === action.payload.carId);\n\n      // Check if the car is available for rent\n      if (car && car.available) {\n        // Count how many cars of this type are already rented\n        const rentedCarsOfType = state.rentals.filter(rental => rental.type === action.payload.type).length;\n        \n        // Allow reservation only if less than 3 cars of the same type are rented\n        if (rentedCarsOfType < 3) {\n          car.available = false; // Mark the car as unavailable\n          state.rentals.push(action.payload); // Add the rental to the rental history\n        } else {\n          console.log(`Limit of 3 ${action.payload.type} cars has been reached.`);\n        }\n      }\n    },\n    // Action to return a rented car\n    returnCar: (state, action: PayloadAction<number>) => {\n      // Find the car to be returned by its ID\n      const car = state.availableCars.find(c => c.id === action.payload);\n      if (car) {\n        car.available = true; // Mark the car as available again\n        // Remove the rental from the rental history\n        state.rentals = state.rentals.filter(rental => rental.carId !== action.payload);\n      }\n    },\n  },\n});\n\n// Export the actions generated by createSlice\nexport const { reserveCar, returnCar } = carSlice.actions;\n\n// Export the reducer for the cars slice\nexport default carSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAE7D;AAOA;AAMA;AACA,KAAM,CAAAC,YAAsB,CAAG,CAC7BC,aAAa,CAAE,CACb,CAAEC,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,SAAS,CAAE,IAAK,CAAC,CACzC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,SAAS,CAAE,IAAK,CAAC,CACzC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,SAAS,CAAE,IAAK,CAAC,CACzC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACvC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,IAAK,CAAC,CACxC,CACDC,OAAO,CAAE,EACX,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAC3BQ,IAAI,CAAE,MAAM,CACZP,YAAY,CACZQ,QAAQ,CAAE,CACR;AACAC,UAAU,CAAEA,CAACC,KAAK,CAAEC,MAAuF,GAAK,CAC9G;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACT,aAAa,CAACY,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACZ,EAAE,GAAKS,MAAM,CAACI,OAAO,CAACC,KAAK,CAAC,CAExE;AACA,GAAIJ,GAAG,EAAIA,GAAG,CAACR,SAAS,CAAE,CACxB;AACA,KAAM,CAAAa,gBAAgB,CAAGP,KAAK,CAACL,OAAO,CAACa,MAAM,CAACC,MAAM,EAAIA,MAAM,CAAChB,IAAI,GAAKQ,MAAM,CAACI,OAAO,CAACZ,IAAI,CAAC,CAACiB,MAAM,CAEnG;AACA,GAAIH,gBAAgB,CAAG,CAAC,CAAE,CACxBL,GAAG,CAACR,SAAS,CAAG,KAAK,CAAE;AACvBM,KAAK,CAACL,OAAO,CAACgB,IAAI,CAACV,MAAM,CAACI,OAAO,CAAC,CAAE;AACtC,CAAC,IAAM,CACLO,OAAO,CAACC,GAAG,CAAC,cAAcZ,MAAM,CAACI,OAAO,CAACZ,IAAI,yBAAyB,CAAC,CACzE,CACF,CACF,CAAC,CACD;AACAqB,SAAS,CAAEA,CAACd,KAAK,CAAEC,MAA6B,GAAK,CACnD;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACT,aAAa,CAACY,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACZ,EAAE,GAAKS,MAAM,CAACI,OAAO,CAAC,CAClE,GAAIH,GAAG,CAAE,CACPA,GAAG,CAACR,SAAS,CAAG,IAAI,CAAE;AACtB;AACAM,KAAK,CAACL,OAAO,CAAGK,KAAK,CAACL,OAAO,CAACa,MAAM,CAACC,MAAM,EAAIA,MAAM,CAACH,KAAK,GAAKL,MAAM,CAACI,OAAO,CAAC,CACjF,CACF,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAEN,UAAU,CAAEe,SAAU,CAAC,CAAGlB,QAAQ,CAACmB,OAAO,CAEzD;AACA,cAAe,CAAAnB,QAAQ,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}