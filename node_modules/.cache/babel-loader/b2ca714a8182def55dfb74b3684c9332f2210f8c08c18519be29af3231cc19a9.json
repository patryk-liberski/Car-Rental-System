{"ast":null,"code":"var _jsxFileName = \"/Users/patrykliberski/Downloads/Dev/car-rental-system/src/components/ReservationForm.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { RootState } from '../store/store';\n// import { reserveCar } from '../features/cars/carSlice';\n\n// const ReservationForm: React.FC = () => {\n//   const dispatch = useDispatch();\n//   const availableCars = useSelector((state: RootState) => state.cars.availableCars);\n\n//   const [carType, setCarType] = useState<'sedan' | 'SUV' | 'van'>('sedan');\n//   const [startDate, setStartDate] = useState<string>('');\n//   const [days, setDays] = useState<number>(1);\n\n//   const handleSubmit = (e: React.FormEvent) => {\n//     e.preventDefault();\n//     const selectedCar = availableCars.find(car => car.type === carType && car.available);\n//     if (selectedCar) {\n//       dispatch(reserveCar({ carId: selectedCar.id, type: selectedCar.type, startDate, days }));\n//     } else {\n//       console.log(`No available cars of type ${carType}`);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"form\">\n//       <h1 className=\"form__header\">Reserve a Car</h1>\n//       <label className=\"form__label\">Car Type</label>\n//       <select value={carType} onChange={(e) => setCarType(e.target.value as 'sedan' | 'SUV' | 'van')} className=\"form__select\">\n//         <option value=\"sedan\">Sedan</option>\n//         <option value=\"SUV\">SUV</option>\n//         <option value=\"van\">Van</option>\n//       </select>\n//       <label className=\"form__label\">Start Date</label>\n//       <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} className=\"form__input\" />\n//       <label className=\"form__label\">Days</label>\n//       <input type=\"number\" value={days} onChange={(e) => setDays(Number(e.target.value))} className=\"form__input\" />\n//       <button type=\"submit\" className=\"form__button\">Reserve</button>\n//     </form>\n//   );\n// };\n\n// export default ReservationForm;\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reserveCar } from '../features/cars/carSlice';\nimport './ReservationForm.scss'; // Import stylów\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const availableCars = useSelector(state => state.cars.availableCars);\n  const [carType, setCarType] = useState('sedan');\n  const [startDate, setStartDate] = useState('');\n  const [days, setDays] = useState(1);\n  const [errorMessage, setErrorMessage] = useState(''); // Dodano stan na przechowywanie błędu\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Pobieranie bieżącej daty\n    const today = new Date().toISOString().split('T')[0];\n\n    // Sprawdzanie, czy data początkowa została podana i czy nie jest wcześniejsza niż dzisiaj\n    if (!startDate) {\n      setErrorMessage('Please select a start date.');\n      return;\n    }\n    if (startDate < today) {\n      setErrorMessage('The start date cannot be in the past.');\n      return;\n    }\n    const selectedCar = availableCars.find(car => car.type === carType && car.available);\n    if (selectedCar) {\n      dispatch(reserveCar({\n        carId: selectedCar.id,\n        type: selectedCar.type,\n        startDate,\n        days\n      }));\n      setErrorMessage(''); // Wyczyść komunikat o błędzie po pomyślnej rezerwacji\n    } else {\n      setErrorMessage(`No available cars of type ${carType}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form__header\",\n      children: \"Reserve a Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      children: \"Car Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: carType,\n      onChange: e => setCarType(e.target.value),\n      className: \"form__select\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sedan\",\n        children: \"Sedan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"SUV\",\n        children: \"SUV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"van\",\n        children: \"Van\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      children: \"Start Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDate,\n      onChange: e => setStartDate(e.target.value),\n      className: \"form__input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      children: \"Days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: days,\n      onChange: e => setDays(Number(e.target.value)),\n      className: \"form__input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form__error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"form__button\",\n      children: \"Reserve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationForm, \"9TngEft4rN0ZlEV9FnM/35lJYuo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ReservationForm;\nexport default ReservationForm;\nvar _c;\n$RefreshReg$(_c, \"ReservationForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","reserveCar","jsxDEV","_jsxDEV","ReservationForm","_s","dispatch","availableCars","state","cars","carType","setCarType","startDate","setStartDate","days","setDays","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","today","Date","toISOString","split","selectedCar","find","car","type","available","carId","id","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","Number","_c","$RefreshReg$"],"sources":["/Users/patrykliberski/Downloads/Dev/car-rental-system/src/components/ReservationForm.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { RootState } from '../store/store';\n// import { reserveCar } from '../features/cars/carSlice';\n\n// const ReservationForm: React.FC = () => {\n//   const dispatch = useDispatch();\n//   const availableCars = useSelector((state: RootState) => state.cars.availableCars);\n\n//   const [carType, setCarType] = useState<'sedan' | 'SUV' | 'van'>('sedan');\n//   const [startDate, setStartDate] = useState<string>('');\n//   const [days, setDays] = useState<number>(1);\n\n//   const handleSubmit = (e: React.FormEvent) => {\n//     e.preventDefault();\n//     const selectedCar = availableCars.find(car => car.type === carType && car.available);\n//     if (selectedCar) {\n//       dispatch(reserveCar({ carId: selectedCar.id, type: selectedCar.type, startDate, days }));\n//     } else {\n//       console.log(`No available cars of type ${carType}`);\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"form\">\n//       <h1 className=\"form__header\">Reserve a Car</h1>\n//       <label className=\"form__label\">Car Type</label>\n//       <select value={carType} onChange={(e) => setCarType(e.target.value as 'sedan' | 'SUV' | 'van')} className=\"form__select\">\n//         <option value=\"sedan\">Sedan</option>\n//         <option value=\"SUV\">SUV</option>\n//         <option value=\"van\">Van</option>\n//       </select>\n//       <label className=\"form__label\">Start Date</label>\n//       <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} className=\"form__input\" />\n//       <label className=\"form__label\">Days</label>\n//       <input type=\"number\" value={days} onChange={(e) => setDays(Number(e.target.value))} className=\"form__input\" />\n//       <button type=\"submit\" className=\"form__button\">Reserve</button>\n//     </form>\n//   );\n// };\n\n// export default ReservationForm;\n\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\nimport { reserveCar } from '../features/cars/carSlice';\nimport './ReservationForm.scss'; // Import stylów\n\nconst ReservationForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const availableCars = useSelector((state: RootState) => state.cars.availableCars);\n\n  const [carType, setCarType] = useState<'sedan' | 'SUV' | 'van'>('sedan');\n  const [startDate, setStartDate] = useState<string>('');\n  const [days, setDays] = useState<number>(1);\n  const [errorMessage, setErrorMessage] = useState<string>(''); // Dodano stan na przechowywanie błędu\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Pobieranie bieżącej daty\n    const today = new Date().toISOString().split('T')[0];\n\n    // Sprawdzanie, czy data początkowa została podana i czy nie jest wcześniejsza niż dzisiaj\n    if (!startDate) {\n      setErrorMessage('Please select a start date.');\n      return;\n    }\n\n    if (startDate < today) {\n      setErrorMessage('The start date cannot be in the past.');\n      return;\n    }\n\n    const selectedCar = availableCars.find(car => car.type === carType && car.available);\n    if (selectedCar) {\n      dispatch(reserveCar({ carId: selectedCar.id, type: selectedCar.type, startDate, days }));\n      setErrorMessage(''); // Wyczyść komunikat o błędzie po pomyślnej rezerwacji\n    } else {\n      setErrorMessage(`No available cars of type ${carType}`);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <h1 className=\"form__header\">Reserve a Car</h1>\n      <label className=\"form__label\">Car Type</label>\n      <select value={carType} onChange={(e) => setCarType(e.target.value as 'sedan' | 'SUV' | 'van')} className=\"form__select\">\n        <option value=\"sedan\">Sedan</option>\n        <option value=\"SUV\">SUV</option>\n        <option value=\"van\">Van</option>\n      </select>\n      <label className=\"form__label\">Start Date</label>\n      <input \n        type=\"date\" \n        value={startDate} \n        onChange={(e) => setStartDate(e.target.value)} \n        className=\"form__input\" \n      />\n      <label className=\"form__label\">Days</label>\n      <input \n        type=\"number\" \n        value={days} \n        onChange={(e) => setDays(Number(e.target.value))} \n        className=\"form__input\" \n      />\n      {errorMessage && <p className=\"form__error\">{errorMessage}</p>} {/* Wyświetlanie błędów */}\n      <button type=\"submit\" className=\"form__button\">Reserve</button>\n    </form>\n  );\n};\n\nexport default ReservationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}